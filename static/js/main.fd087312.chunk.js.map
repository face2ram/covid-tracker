{"version":3,"sources":["api/index.js","components/Cards/Cards.js","components/Chart/Chart.js","components/CountryPicker/CountryPicker.js","App.js","index.js","images/image.png"],"names":["url","fetchData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","Cards","className","Grid","container","spacing","justify","item","xs","md","component","Card","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","Chart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","lineChart","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","setCountries","fetchAPI","FormControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","setState","this","src","image","alt","React","Component","ReactDOM","render","document","querySelector","module","exports"],"mappings":"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","file":"static/js/main.fd087312.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n\tlet changeableUrl = url;\r\n\r\n\tif (country) {\r\n\t\tchangeableUrl = `${url}/countries/${country}`;\r\n\t}\r\n\r\n\ttry {\r\n\t\tconst { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n\r\n\t\treturn { confirmed, recovered, deaths, lastUpdate };\r\n\t} catch (error) {\r\n\t\treturn error;\r\n\t}\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n\ttry {\r\n\t\tconst { data } = await axios.get(`${url}/daily`);\r\n\r\n\t\treturn data.map(({ confirmed, deaths, reportDate: date }) => ({\r\n\t\t\tconfirmed: confirmed.total,\r\n\t\t\tdeaths: deaths.total,\r\n\t\t\tdate\r\n    }));\r\n    \r\n\t} catch (error) {\r\n\t\treturn error;\r\n\t}\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n\ttry {\r\n\t\tconst { data: { countries } } = await axios.get(`${url}/countries`);\r\n\r\n\t\treturn countries.map((country) => country.name);\r\n\t} catch (error) {\r\n\t\treturn error;\r\n\t}\r\n};\r\n","import React from 'react';\r\nimport './Cards.css';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n\tif (!confirmed) {\r\n\t\treturn 'Loading...';\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<Grid container spacing={3} justify=\"center\">\r\n\t\t\t\t<Grid item xs={12} md={3} component={Card} className=\"card infected\">\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t\t\tInfected\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">\r\n\t\t\t\t\t\t\t<CountUp start={0} end={confirmed.value} duration={2} separator=\",\" />\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"body2\">Number of active cases of COVID-19.</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs={12} md={3} component={Card} className=\"card recovered\">\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t\t\tRecovered\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">\r\n\t\t\t\t\t\t\t<CountUp start={0} end={recovered.value} duration={2} separator=\",\" />\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\"> {new Date(lastUpdate).toDateString()} </Typography>\r\n\t\t\t\t\t\t<Typography variant=\"body2\">Number of recoveries from COVID-19.</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs={12} md={3} component={Card} className=\"card deaths\">\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t\t\tDeaths\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">\r\n\t\t\t\t\t\t\t<CountUp start={0} end={deaths.value} duration={2} separator=\",\" />\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\"> {new Date(lastUpdate).toDateString()} </Typography>\r\n\t\t\t\t\t\t<Typography variant=\"body2\">Number of deaths caused by COVID-19.</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Cards;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Chart.css';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n\tconst [ dailyData, setDailyData ] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchMyAPI = async () => {\r\n\t\t\tconst initialDailyData = await fetchDailyData();\r\n\r\n\t\t\tsetDailyData(initialDailyData);\r\n\t\t};\r\n\r\n\t\tfetchMyAPI();\r\n\t}, []);\r\n\r\n\tconst lineChart = dailyData[0] ? (\r\n\t\t<Line\r\n\t\t\tdata={{\r\n\t\t\t\tlabels: dailyData.map(({ date }) => date),\r\n\t\t\t\tdatasets: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdata: dailyData.map(({ confirmed }) => confirmed),\r\n\t\t\t\t\t\tlabel: 'Infected',\r\n\t\t\t\t\t\tborderColor: '#3333ff',\r\n\t\t\t\t\t\tfill: true\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdata: dailyData.map(({ deaths }) => deaths),\r\n\t\t\t\t\t\tlabel: 'deaths',\r\n\t\t\t\t\t\tborderColor: 'red',\r\n\t\t\t\t\t\tbackgroundColor: 'rgba(255,0,0,0.5)',\r\n\t\t\t\t\t\tfill: true\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}}\r\n\t\t/>\r\n\t) : null;\r\n\r\n\tconst barChart = confirmed ? (\r\n\t\t<Bar\r\n\t\t\tdata={{\r\n\t\t\t\tlabels: [ 'Infected', 'Recovered', 'Deaths' ],\r\n\t\t\t\tdatasets: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'People',\r\n\t\t\t\t\t\tbackgroundColor: [ 'rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)' ],\r\n\t\t\t\t\t\tdata: [ confirmed.value, recovered.value, deaths.value ]\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}}\r\n\t\t\toptions={{\r\n\t\t\t\tlegend: { display: false },\r\n\t\t\t\ttitle: { display: true, text: `Current status in ${country}` }\r\n\t\t\t}}\r\n\t\t/>\r\n\t) : null;\r\n\r\n\treturn <div className=\"container\">{country ? barChart : lineChart}</div>;\r\n};\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport './CountryPicker.css';\r\nimport { fetchCountries } from '../../api';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n\tconst [ countries, setCountries ] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchAPI = async () => {\r\n\t\t\tsetCountries(await fetchCountries());\r\n\t\t};\r\n\r\n\t\tfetchAPI();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<FormControl className=\"formControl\">\r\n\t\t\t<NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n\t\t\t\t<option value=\"\">Global</option>\r\n\t\t\t\t{countries.map((country, i) => (\r\n\t\t\t\t\t<option key={i} value={country}>\r\n\t\t\t\t\t\t{country}\r\n\t\t\t\t\t</option>\r\n\t\t\t\t))}\r\n\t\t\t</NativeSelect>\r\n\t\t</FormControl>\r\n\t);\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { fetchData } from './api/';\r\nimport Cards from './components/Cards/Cards';\r\nimport Chart from './components/Chart/Chart';\r\nimport CountryPicker from './components/CountryPicker/CountryPicker';\r\nimport image from './images/image.png';\r\n\r\n\r\nexport class App extends React.Component {\r\n\tstate = {\r\n\t\tdata: {},\r\n\t\tcountry: ''\r\n\t};\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst data = await fetchData();\r\n\r\n\t\tthis.setState({ data });\r\n\t}\r\n\thandleCountryChange = async (country) => {\r\n\t\tconst data = await fetchData(country);\r\n\r\n\t\tthis.setState({ data, country: country });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { data, country } = this.state;\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<img className=\"image\" src={image} alt=\"COVID-19\" />\r\n\t\t\t\t<Cards data={data} />\r\n\t\t\t\t<CountryPicker handleCountryChange={this.handleCountryChange} />\r\n\t\t\t\t<Chart data={data} country={country} />\t\t\t\t\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}